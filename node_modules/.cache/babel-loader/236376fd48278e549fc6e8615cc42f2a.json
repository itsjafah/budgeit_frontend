{"ast":null,"code":"import _classCallCheck from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/src/components/home/DoughnutChart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Doughnut } from 'react-chartjs-2';\nimport DoughnutChartMaker from './DoughnutChartMaker';\n\nvar DoughnutChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DoughnutChart, _Component);\n\n  function DoughnutChart() {\n    _classCallCheck(this, DoughnutChart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DoughnutChart).apply(this, arguments));\n  }\n\n  _createClass(DoughnutChart, [{\n    key: \"componentDidUpdate\",\n    // get all expenses for a specific budget through categories\n    // go through budgets where it matches the budget.id === category.budget_id === array\n    // with that new array go through where it matches category.id === expense.category_id === array\n    // mapThroughBudgetsToMatchCategory = () => {\n    //     this.props.budgets.map((budget) => {\n    //     let cats = this.props.categories.filter((category) => {\n    //       return category.budget_id === budget.id\n    //     })\n    //     console.log(cats);\n    //\n    //     cats.map((cat) => {\n    //       let expense = this.props.expenses.filter((exp) => {\n    //         console.log(exp);\n    //         return exp.category_id === cat.id\n    //       })\n    //     })\n    //   })\n    // }\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.budgets > prevProps.budgets) {\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      // {this.mapThroughBudgetsToMatchCategory()}\n      // if (this.props.budgets.length >0) {\n      //   let budgets = this.props.budgets.filter(budget => {\n      //     let cats = this.props.categories.filter((category) => {\n      //       return category.budget_id === budget.id\n      //     })\n      //     return cats.length > 0\n      //   })\n      //   budgets.forEach((budget) => {\n      //     let cats = this.props.categories.filter((category) => {\n      //       return category.budget_id === budget.id\n      //     })\n      //     console.log(cats);\n      //     data.labels = cats.map(cat => cat.title)\n      //     data.datasets.backgroundColor = cats.map(cat => cat.color)\n      //     data.datasets.data = cats.map(cat => {\n      //       let expenses = this.props.expenses.filter(e => e.category_id === cat.id)\n      //       return expenses.length ? expenses.reduce((acc, val) => (acc + val)) : 0\n      //     })\n      //     let arr = []\n      //     for (let i=0; i < cats.length; i++) {\n      //       arr.push('#FFFFFF')\n      //     }\n      //     data.datasets.hoverBackgroundColor = arr\n      //     // cats.map((cat) => {\n      //     //   let expense = this.props.expenses.filter((exp) => {\n      //     //     // console.log(exp);\n      //     //     return exp.category_id === cat.id\n      //     //   })\n      //     //\n      //     // })\n      //   })\n      // }\n      var budgetCategories = function budgetCategories(budget) {\n        var cats = _this.props.categories.filter(function (category) {\n          return category.budget_id === budget.id;\n        });\n\n        return cats;\n      }; // console.log(mapThroughBudgetsToMatchCategory);\n\n\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.props.budgets.length > 0 && this.props.expenses.length > 0 ? this.props.budgets.map(function (budget) {\n        return React.createElement(DoughnutChartMaker, {\n          categories: budgetCategories(budget),\n          expenses: _this.props.expenses,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        });\n      }) : null);\n    }\n  }]);\n\n  return DoughnutChart;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    budgets: state.budgetReducer.budgets,\n    categories: state.categoryReducer.categories,\n    expenses: state.expenseReducer.expenses\n  };\n};\n\nexport default connect(mapStateToProps)(DoughnutChart);","map":{"version":3,"sources":["/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/src/components/home/DoughnutChart.js"],"names":["React","Component","connect","Doughnut","DoughnutChartMaker","DoughnutChart","prevProps","props","budgets","forceUpdate","budgetCategories","budget","cats","categories","filter","category","budget_id","id","console","log","length","expenses","map","mapStateToProps","state","budgetReducer","categoryReducer","expenseReducer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;IAEMC,a;;;;;;;;;;;;;AACJ;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;uCAEmBC,S,EAAW;AAC5B,UAAG,KAAKC,KAAL,CAAWC,OAAX,GAAqBF,SAAS,CAACE,OAAlC,EAA2C;AACzC,aAAKC,WAAL;AACD;AACF;;;6BAEQ;AAAA;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAAY;AACnC,YAAIC,IAAI,GAAG,KAAI,CAACL,KAAL,CAAWM,UAAX,CAAsBC,MAAtB,CAA6B,UAACC,QAAD,EAAc;AACpD,iBAAOA,QAAQ,CAACC,SAAT,KAAuBL,MAAM,CAACM,EAArC;AACD,SAFU,CAAX;;AAGA,eAAOL,IAAP;AACD,OALD,CApCO,CA0CP;;;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKA,KAAL,CAAWC,OAAX,CAAmBY,MAAnB,GAA4B,CAA5B,IAAiC,KAAKb,KAAL,CAAWc,QAAX,CAAoBD,MAApB,GAA6B,CAA9D,GAEE,KAAKb,KAAL,CAAWC,OAAX,CAAmBc,GAAnB,CAAuB,UAAAX,MAAM;AAAA,eAAI,oBAAC,kBAAD;AAAoB,UAAA,UAAU,EAAED,gBAAgB,CAACC,MAAD,CAAhD;AAA0D,UAAA,QAAQ,EAAE,KAAI,CAACJ,KAAL,CAAWc,QAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OAA7B,CAFF,GAIE,IANN,CADF;AAWD;;;;EAnFyBpB,S;;AAuF5B,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLhB,IAAAA,OAAO,EAAEgB,KAAK,CAACC,aAAN,CAAoBjB,OADxB;AAELK,IAAAA,UAAU,EAAEW,KAAK,CAACE,eAAN,CAAsBb,UAF7B;AAGLQ,IAAAA,QAAQ,EAAEG,KAAK,CAACG,cAAN,CAAqBN;AAH1B,GAAP;AAKD,CAND;;AAQA,eAAenB,OAAO,CAACqB,eAAD,CAAP,CAAyBlB,aAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Doughnut } from 'react-chartjs-2'\nimport DoughnutChartMaker from './DoughnutChartMaker'\n\nclass DoughnutChart extends Component {\n  // get all expenses for a specific budget through categories\n\n  // go through budgets where it matches the budget.id === category.budget_id === array\n  // with that new array go through where it matches category.id === expense.category_id === array\n\n  // mapThroughBudgetsToMatchCategory = () => {\n  //     this.props.budgets.map((budget) => {\n  //     let cats = this.props.categories.filter((category) => {\n  //       return category.budget_id === budget.id\n  //     })\n  //     console.log(cats);\n  //\n  //     cats.map((cat) => {\n  //       let expense = this.props.expenses.filter((exp) => {\n  //         console.log(exp);\n  //         return exp.category_id === cat.id\n  //       })\n  //     })\n  //   })\n  // }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.budgets > prevProps.budgets) {\n      this.forceUpdate()\n    }\n  }\n\n  render() {\n\n\n    // {this.mapThroughBudgetsToMatchCategory()}\n    // if (this.props.budgets.length >0) {\n    //   let budgets = this.props.budgets.filter(budget => {\n    //     let cats = this.props.categories.filter((category) => {\n    //       return category.budget_id === budget.id\n    //     })\n    //     return cats.length > 0\n    //   })\n    //   budgets.forEach((budget) => {\n    //     let cats = this.props.categories.filter((category) => {\n    //       return category.budget_id === budget.id\n    //     })\n    //     console.log(cats);\n    //     data.labels = cats.map(cat => cat.title)\n    //     data.datasets.backgroundColor = cats.map(cat => cat.color)\n    //     data.datasets.data = cats.map(cat => {\n    //       let expenses = this.props.expenses.filter(e => e.category_id === cat.id)\n    //       return expenses.length ? expenses.reduce((acc, val) => (acc + val)) : 0\n    //     })\n    //     let arr = []\n    //     for (let i=0; i < cats.length; i++) {\n    //       arr.push('#FFFFFF')\n    //     }\n    //     data.datasets.hoverBackgroundColor = arr\n    //     // cats.map((cat) => {\n    //     //   let expense = this.props.expenses.filter((exp) => {\n    //     //     // console.log(exp);\n    //     //     return exp.category_id === cat.id\n    //     //   })\n    //     //\n    //     // })\n    //   })\n    // }\n    const budgetCategories = (budget) => {\n      let cats = this.props.categories.filter((category) => {\n        return category.budget_id === budget.id\n      })\n      return cats\n    }\n    // console.log(mapThroughBudgetsToMatchCategory);\n    console.log(this.props);\n    return (\n      <div>\n        {\n          this.props.budgets.length > 0 && this.props.expenses.length > 0\n          ?\n            this.props.budgets.map(budget => <DoughnutChartMaker categories={budgetCategories(budget)} expenses={this.props.expenses} />)\n          :\n            null\n        }\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    budgets: state.budgetReducer.budgets,\n    categories: state.categoryReducer.categories,\n    expenses: state.expenseReducer.expenses\n  }\n}\n\nexport default connect(mapStateToProps)(DoughnutChart)\n"]},"metadata":{},"sourceType":"module"}