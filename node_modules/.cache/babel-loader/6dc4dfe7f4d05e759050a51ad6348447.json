{"ast":null,"code":"var _jsxFileName = \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/src/components/home/DoughnutChartMaker.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport { defaults } from 'react-chartjs-2';\nimport merge from 'lodash.merge'; // or\n// import { merge } from 'lodash';\n\nmerge(defaults, {\n  global: {\n    animation: false,\n    line: {\n      borderColor: '#F85F73'\n    }\n  }\n});\n\nvar DoughnutChartMaker = function DoughnutChartMaker(props) {\n  var data = {\n    labels: ['Pink', 'Blue', 'Yellow'],\n    datasets: [{\n      data: [700, 50, 100],\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n      hoverBackgroundColor: [// '#FF6384',\n      // '#36A2EB',\n      '#FFFFFF']\n    }]\n  };\n\n  if (props.categories.length === 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  } else {\n    console.log(props);\n    var _data = {\n      labels: ['Pink', 'Blue', 'Yellow'],\n      datasets: [{\n        data: [700, 50, 100],\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n        hoverBackgroundColor: [// '#FF6384',\n        // '#36A2EB',\n        '#FFFFFF']\n      }]\n    };\n    _data.labels = props.categories.map(function (cat) {\n      return cat.title;\n    });\n    _data.datasets[0].backgroundColor = props.categories.map(function (cat) {\n      return cat.color;\n    });\n    _data.datasets[0].data = props.categories.map(function (cat) {\n      var expenses = props.expenses.filter(function (e) {\n        return e.category_id === cat.id;\n      });\n      expenses = expenses.map(function (exp) {\n        return exp.amount;\n      });\n      return expenses ? expenses.reduce(function (acc, val) {\n        return acc + val;\n      }) : 0;\n    });\n    console.log(_data.datasets[0].data);\n    var arr = [];\n\n    for (var i = 0; i < props.categories.length; i++) {\n      arr.push('#B9F5D8');\n    }\n\n    _data.datasets[0].hoverBackgroundColor = arr; // cats.map((cat) => {\n    //   let expense = this.props.expenses.filter((exp) => {\n    //     // console.log(exp);\n    //     return exp.category_id === cat.id\n    //   })\n    // })\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Doughnut, {\n      data: _data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n};\n\nexport default DoughnutChartMaker;","map":{"version":3,"sources":["/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/src/components/home/DoughnutChartMaker.js"],"names":["React","PropTypes","Doughnut","defaults","merge","global","animation","line","borderColor","DoughnutChartMaker","props","data","labels","datasets","backgroundColor","hoverBackgroundColor","categories","length","console","log","map","cat","title","color","expenses","filter","e","category_id","id","exp","amount","reduce","acc","val","arr","i","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,cAAlB,C,CACA;AACA;;AAEAA,KAAK,CAACD,QAAD,EAAW;AACfE,EAAAA,MAAM,EAAE;AACLC,IAAAA,SAAS,EAAE,KADN;AAEPC,IAAAA,IAAI,EAAE;AACLC,MAAAA,WAAW,EAAE;AADR;AAFC;AADO,CAAX,CAAL;;AASA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AACpC,MAAIC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,CADC;AAETC,IAAAA,QAAQ,EAAE,CAAC;AACTF,MAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,GAAV,CADG;AAETG,MAAAA,eAAe,EAAE,CACf,SADe,EAEf,SAFe,EAGf,SAHe,CAFR;AAOTC,MAAAA,oBAAoB,EAAE,CACpB;AACA;AACA,eAHoB;AAPb,KAAD;AAFD,GAAX;;AAiBA,MAAIL,KAAK,CAACM,UAAN,CAAiBC,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,QAAIC,KAAI,GAAG;AACTC,MAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,CADC;AAETC,MAAAA,QAAQ,EAAE,CAAC;AACTF,QAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,GAAV,CADG;AAETG,QAAAA,eAAe,EAAE,CACf,SADe,EAEf,SAFe,EAGf,SAHe,CAFR;AAOTC,QAAAA,oBAAoB,EAAE,CACpB;AACA;AACA,iBAHoB;AAPb,OAAD;AAFD,KAAX;AAgBAJ,IAAAA,KAAI,CAACC,MAAL,GAAcF,KAAK,CAACM,UAAN,CAAiBI,GAAjB,CAAqB,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,KAAR;AAAA,KAAxB,CAAd;AACAX,IAAAA,KAAI,CAACE,QAAL,CAAc,CAAd,EAAiBC,eAAjB,GAAmCJ,KAAK,CAACM,UAAN,CAAiBI,GAAjB,CAAqB,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACE,KAAR;AAAA,KAAxB,CAAnC;AACAZ,IAAAA,KAAI,CAACE,QAAL,CAAc,CAAd,EAAiBF,IAAjB,GAAwBD,KAAK,CAACM,UAAN,CAAiBI,GAAjB,CAAqB,UAAAC,GAAG,EAAI;AAClD,UAAIG,QAAQ,GAAGd,KAAK,CAACc,QAAN,CAAeC,MAAf,CAAsB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,WAAF,KAAkBN,GAAG,CAACO,EAA1B;AAAA,OAAvB,CAAf;AACAJ,MAAAA,QAAQ,GAAGA,QAAQ,CAACJ,GAAT,CAAa,UAAAS,GAAG;AAAA,eAAIA,GAAG,CAACC,MAAR;AAAA,OAAhB,CAAX;AACA,aAAON,QAAQ,GAAGA,QAAQ,CAACO,MAAT,CAAgB,UAACC,GAAD,EAAMC,GAAN;AAAA,eAAeD,GAAG,GAAGC,GAArB;AAAA,OAAhB,CAAH,GAAgD,CAA/D;AACD,KAJuB,CAAxB;AAKAf,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAI,CAACE,QAAL,CAAc,CAAd,EAAiBF,IAA7B;AACA,QAAIuB,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGzB,KAAK,CAACM,UAAN,CAAiBC,MAAnC,EAA2CkB,CAAC,EAA5C,EAAgD;AAC9CD,MAAAA,GAAG,CAACE,IAAJ,CAAS,SAAT;AACD;;AACDzB,IAAAA,KAAI,CAACE,QAAL,CAAc,CAAd,EAAiBE,oBAAjB,GAAwCmB,GAAxC,CA9BK,CA+BL;AACA;AACA;AACA;AACA;AACA;;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEvB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;AACF,CAhED;;AAkEA,eAAeF,kBAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Doughnut } from 'react-chartjs-2'\nimport { defaults } from 'react-chartjs-2';\nimport merge from 'lodash.merge';\n// or\n// import { merge } from 'lodash';\n\nmerge(defaults, {\n\tglobal: {\n  \t\tanimation: false,\n\t\tline: {\n\t\t\tborderColor: '#F85F73',\n\t\t},\n\t},\n})\n\nconst DoughnutChartMaker = (props) => {\n  let data = {\n    labels: ['Pink', 'Blue', 'Yellow'],\n    datasets: [{\n      data: [700, 50, 100],\n      backgroundColor: [\n        '#FF6384',\n        '#36A2EB',\n        '#FFCE56'\n      ],\n      hoverBackgroundColor: [\n        // '#FF6384',\n        // '#36A2EB',\n        '#FFFFFF'\n      ]\n    }]\n  }\n\n  if (props.categories.length === 0) {\n    return <div></div>\n  } else {\n    console.log(props)\n    let data = {\n      labels: ['Pink', 'Blue', 'Yellow'],\n      datasets: [{\n        data: [700, 50, 100],\n        backgroundColor: [\n          '#FF6384',\n          '#36A2EB',\n          '#FFCE56'\n        ],\n        hoverBackgroundColor: [\n          // '#FF6384',\n          // '#36A2EB',\n          '#FFFFFF'\n        ]\n      }]\n    }\n    data.labels = props.categories.map(cat => cat.title)\n    data.datasets[0].backgroundColor = props.categories.map(cat => cat.color)\n    data.datasets[0].data = props.categories.map(cat => {\n      let expenses = props.expenses.filter(e => e.category_id === cat.id)\n      expenses = expenses.map(exp => exp.amount)\n      return expenses ? expenses.reduce((acc, val) => (acc + val)) : 0\n    })\n    console.log(data.datasets[0].data)\n    let arr = []\n    for (let i=0; i < props.categories.length; i++) {\n      arr.push('#B9F5D8')\n    }\n    data.datasets[0].hoverBackgroundColor = arr\n    // cats.map((cat) => {\n    //   let expense = this.props.expenses.filter((exp) => {\n    //     // console.log(exp);\n    //     return exp.category_id === cat.id\n    //   })\n    // })\n\n    return (\n      <div>\n        <Doughnut data={data} />\n      </div>\n    )\n  }\n}\n\nexport default DoughnutChartMaker\n"]},"metadata":{},"sourceType":"module"}