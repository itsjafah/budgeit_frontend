{"ast":null,"code":"import _classCallCheck from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/src/components/home/DoughnutChart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Doughnut } from 'react-chartjs-2';\n\nvar DoughnutChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DoughnutChart, _Component);\n\n  function DoughnutChart() {\n    _classCallCheck(this, DoughnutChart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DoughnutChart).apply(this, arguments));\n  }\n\n  _createClass(DoughnutChart, [{\n    key: \"render\",\n    // get all expenses for a specific budget through categories\n    // go through budgets where it matches the budget.id === category.budget_id === array\n    // with that new array go through where it matches category.id === expense.category_id === array\n    // mapThroughBudgetsToMatchCategory = () => {\n    //     this.props.budgets.map((budget) => {\n    //     let cats = this.props.categories.filter((category) => {\n    //       return category.budget_id === budget.id\n    //     })\n    //     console.log(cats);\n    //\n    //     cats.map((cat) => {\n    //       let expense = this.props.expenses.filter((exp) => {\n    //         console.log(exp);\n    //         return exp.category_id === cat.id\n    //       })\n    //     })\n    //   })\n    // }\n    value: function render() {\n      var _this = this;\n\n      var data = {\n        labels: ['Pink', 'Blue', 'Yellow'],\n        datasets: [{\n          data: [700, 50, 100],\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n          hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n        }] // {this.mapThroughBudgetsToMatchCategory()}\n\n      };\n      var mapThroughBudgetsToMatchCategory = this.props.budgets.map(function (budget) {\n        var cats = _this.props.categories.filter(function (category) {\n          return category.budget_id === budget.id;\n        }); // console.log(cats);\n\n\n        cats.map(function (cat) {\n          var expense = _this.props.expenses.filter(function (exp) {\n            // console.log(exp);\n            return exp.category_id === cat.id;\n          });\n        });\n      });\n      console.log(mapThroughBudgetsToMatchCategory); // console.log(this.props.expenses);\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Doughnut, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DoughnutChart;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    budgets: state.budgetReducer.budgets,\n    categories: state.categoryReducer.categories,\n    expenses: state.expenseReducer.expenses\n  };\n};\n\nexport default connect(mapStateToProps)(DoughnutChart);","map":{"version":3,"sources":["/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/src/components/home/DoughnutChart.js"],"names":["React","Component","connect","Doughnut","DoughnutChart","data","labels","datasets","backgroundColor","hoverBackgroundColor","mapThroughBudgetsToMatchCategory","props","budgets","map","budget","cats","categories","filter","category","budget_id","id","cat","expense","expenses","exp","category_id","console","log","mapStateToProps","state","budgetReducer","categoryReducer","expenseReducer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;IAEMC,a;;;;;;;;;;;;;AACJ;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AAAA;;AACP,UAAIC,IAAI,GAAG;AACTC,QAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,CADC;AAETC,QAAAA,QAAQ,EAAE,CAAC;AACTF,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,GAAV,CADG;AAETG,UAAAA,eAAe,EAAE,CACf,SADe,EAEf,SAFe,EAGf,SAHe,CAFR;AAOTC,UAAAA,oBAAoB,EAAE,CACpB,SADoB,EAEpB,SAFoB,EAGpB,SAHoB;AAPb,SAAD,CAFD,CAiBX;;AAjBW,OAAX;AAkBA,UAAMC,gCAAgC,GACpC,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAACC,MAAD,EAAY;AACnC,YAAIC,IAAI,GAAG,KAAI,CAACJ,KAAL,CAAWK,UAAX,CAAsBC,MAAtB,CAA6B,UAACC,QAAD,EAAc;AACpD,iBAAOA,QAAQ,CAACC,SAAT,KAAuBL,MAAM,CAACM,EAArC;AACD,SAFU,CAAX,CADmC,CAInC;;;AAEAL,QAAAA,IAAI,CAACF,GAAL,CAAS,UAACQ,GAAD,EAAS;AAChB,cAAIC,OAAO,GAAG,KAAI,CAACX,KAAL,CAAWY,QAAX,CAAoBN,MAApB,CAA2B,UAACO,GAAD,EAAS;AAChD;AACA,mBAAOA,GAAG,CAACC,WAAJ,KAAoBJ,GAAG,CAACD,EAA/B;AACD,WAHa,CAAd;AAID,SALD;AAMD,OAZC,CADF;AAcAM,MAAAA,OAAO,CAACC,GAAR,CAAYjB,gCAAZ,EAjCO,CAkCP;;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEL,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EA9DyBJ,S;;AAkE5B,IAAM2B,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLjB,IAAAA,OAAO,EAAEiB,KAAK,CAACC,aAAN,CAAoBlB,OADxB;AAELI,IAAAA,UAAU,EAAEa,KAAK,CAACE,eAAN,CAAsBf,UAF7B;AAGLO,IAAAA,QAAQ,EAAEM,KAAK,CAACG,cAAN,CAAqBT;AAH1B,GAAP;AAKD,CAND;;AAQA,eAAerB,OAAO,CAAC0B,eAAD,CAAP,CAAyBxB,aAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Doughnut } from 'react-chartjs-2'\n\nclass DoughnutChart extends Component {\n  // get all expenses for a specific budget through categories\n\n  // go through budgets where it matches the budget.id === category.budget_id === array\n  // with that new array go through where it matches category.id === expense.category_id === array\n\n  // mapThroughBudgetsToMatchCategory = () => {\n  //     this.props.budgets.map((budget) => {\n  //     let cats = this.props.categories.filter((category) => {\n  //       return category.budget_id === budget.id\n  //     })\n  //     console.log(cats);\n  //\n  //     cats.map((cat) => {\n  //       let expense = this.props.expenses.filter((exp) => {\n  //         console.log(exp);\n  //         return exp.category_id === cat.id\n  //       })\n  //     })\n  //   })\n  // }\n\n  render() {\n    let data = {\n      labels: ['Pink', 'Blue', 'Yellow'],\n      datasets: [{\n        data: [700, 50, 100],\n        backgroundColor: [\n          '#FF6384',\n          '#36A2EB',\n          '#FFCE56'\n        ],\n        hoverBackgroundColor: [\n          '#FF6384',\n          '#36A2EB',\n          '#FFCE56'\n        ]\n      }]\n    }\n\n    // {this.mapThroughBudgetsToMatchCategory()}\n    const mapThroughBudgetsToMatchCategory =\n      this.props.budgets.map((budget) => {\n      let cats = this.props.categories.filter((category) => {\n        return category.budget_id === budget.id\n      })\n      // console.log(cats);\n\n      cats.map((cat) => {\n        let expense = this.props.expenses.filter((exp) => {\n          // console.log(exp);\n          return exp.category_id === cat.id\n        })\n      })\n    })\n    console.log(mapThroughBudgetsToMatchCategory);\n    // console.log(this.props.expenses);\n    return (\n      <div>\n        <Doughnut data={data} />\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    budgets: state.budgetReducer.budgets,\n    categories: state.categoryReducer.categories,\n    expenses: state.expenseReducer.expenses\n  }\n}\n\nexport default connect(mapStateToProps)(DoughnutChart)\n"]},"metadata":{},"sourceType":"module"}