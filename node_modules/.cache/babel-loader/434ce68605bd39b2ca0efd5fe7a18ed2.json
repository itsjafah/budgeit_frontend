{"ast":null,"code":"import _objectSpread from \"/Users/sinnam/Desktop/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/sinnam/Desktop/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/sinnam/Desktop/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sinnam/Desktop/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sinnam/Desktop/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sinnam/Desktop/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sinnam/Desktop/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sinnam/Desktop/budgeit_frontend/budgeit/src/components/expense/ExpenseEdit.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addExpense as _addExpense, editExpense as _editExpense, getExpenses as _getExpenses } from '../../actions/expense';\nimport { getCategories as _getCategories } from '../../actions/category';\n\nvar ExpenseEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ExpenseEdit, _Component);\n\n  function ExpenseEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ExpenseEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ExpenseEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      categories: [],\n      category_id: '',\n      description: '',\n      date: '',\n      amount: '',\n      user_id: 1\n    };\n\n    _this.handleChange = function (event) {\n      // console.log(event.target.value)\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSelect = function (event) {\n      console.log(event.target.value);\n    };\n\n    _this.handleSubmitExpense = function (event) {\n      event.preventDefault(); // console.log(this.props.expense)\n      // console.log(this.state)\n\n      _this.setState({\n        category_id: '',\n        description: '',\n        date: '',\n        amount: '',\n        user_id: 1\n      });\n\n      if (_this.state.category_id && _this.state.description && _this.state.date && _this.state.amount) {\n        var expense = _objectSpread({}, _this.props.expense, _this.state);\n\n        if (_this.props.selectedExpense) {\n          expense = _objectSpread({}, _this.props.selectedExpense, _this.state);\n\n          _this.props.handleSubmit();\n\n          _this.props.editExpense(expense).then(function () {\n            return _this.props.getExpenses();\n          });\n        } else {\n          _this.props.addExpense(expense).then(function () {\n            return _this.props.getExpenses();\n          });\n        }\n\n        event.target.reset();\n      } else {\n        alert('Please fill out all information.');\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ExpenseEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCategories();\n      this.setState({\n        categories: this.props.categories\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // console.log(this.prevprops);\n      // console.log(this.props);\n      if (this.props.selectedExpense !== prevProps.selectedExpense && this.props.selectedExpense) {\n        this.setState({\n          category_id: '',\n          description: this.props.selectedExpense.description,\n          date: this.props.selectedExpense.date,\n          amount: this.props.selectedExpense.amount\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \" Expense \"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmitExpense,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"category_id\",\n        onChange: this.handleSelect,\n        value: this.state.category_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        selected: true,\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Category\"), this.props.categories.map(function (category) {\n        return React.createElement(\"option\", {\n          value: category.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, category.title);\n      })), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        onChange: this.handleChange,\n        value: this.state.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        onChange: this.handleChange,\n        value: this.state.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"amount\",\n        onChange: this.handleChange,\n        value: this.state.amount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \" Save \")));\n    }\n  }]);\n\n  return ExpenseEdit;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    expense: state.expenseReducer.expense,\n    categories: state.categoryReducer.categories\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addExpense: function addExpense(expense) {\n      return _addExpense(expense, dispatch);\n    },\n    editExpense: function editExpense(expense) {\n      return _editExpense(expense, dispatch);\n    },\n    getExpenses: function getExpenses(expense) {\n      return _getExpenses(dispatch);\n    },\n    getCategories: function getCategories() {\n      return _getCategories(dispatch);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseEdit);","map":{"version":3,"sources":["/Users/sinnam/Desktop/budgeit_frontend/budgeit/src/components/expense/ExpenseEdit.js"],"names":["React","Component","connect","addExpense","editExpense","getExpenses","getCategories","ExpenseEdit","state","categories","category_id","description","date","amount","user_id","handleChange","event","setState","target","name","value","handleSelect","console","log","handleSubmitExpense","preventDefault","expense","props","selectedExpense","handleSubmit","then","reset","alert","prevProps","map","category","id","title","mapStateToProps","expenseReducer","categoryReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { addExpense, editExpense, getExpenses } from '../../actions/expense'\nimport { getCategories } from '../../actions/category'\n\nclass ExpenseEdit extends Component {\n  state = {\n    categories: [],\n    category_id: '',\n    description: '',\n    date: '',\n    amount: '',\n    user_id: 1,\n  }\n\n  componentDidMount() {\n    this.props.getCategories()\n    this.setState({categories: this.props.categories})\n  }\n\n  componentDidUpdate(prevProps) {\n    // console.log(this.prevprops);\n    // console.log(this.props);\n    if (this.props.selectedExpense !== prevProps.selectedExpense && this.props.selectedExpense) {\n       this.setState({\n        category_id: '',\n        description: this.props.selectedExpense.description,\n        date: this.props.selectedExpense.date,\n        amount: this.props.selectedExpense.amount\n      })\n    }\n  }\n\n  handleChange = (event) => {\n    // console.log(event.target.value)\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleSelect = (event) => {\n    console.log(event.target.value)\n  }\n\n\n  handleSubmitExpense = (event) => {\n    event.preventDefault()\n    // console.log(this.props.expense)\n    // console.log(this.state)\n    this.setState({\n        category_id: '',\n        description: '',\n        date: '',\n        amount: '',\n        user_id: 1\n    })\n    if (this.state.category_id && this.state.description && this.state.date && this.state.amount) {\n      let expense = { ...this.props.expense, ...this.state}\n\n      if (this.props.selectedExpense) {\n        expense = { ...this.props.selectedExpense, ...this.state }\n        this.props.handleSubmit()\n        this.props.editExpense(expense)\n          .then(()=>this.props.getExpenses())\n      } else {\n\n        this.props.addExpense(expense)\n          .then(()=>this.props.getExpenses())\n      }\n      event.target.reset()\n    } else {\n      alert('Please fill out all information.')\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <div> Expense </div>\n        <form onSubmit={this.handleSubmitExpense}>\n          <select name=\"category_id\" onChange={this.handleSelect} value={this.state.category_id}>\n            <option value=\"\" disabled selected hidden>Category</option>\n            {this.props.categories.map((category) => <option value={category.id}>{category.title}</option>)}\n          </select>\n          <input type=\"text\" name=\"description\" onChange={this.handleChange} value={this.state.description}></input>\n          <input type=\"date\" name=\"date\" onChange={this.handleChange} value={this.state.date}></input>\n          <input type=\"text\" name=\"amount\" onChange={this.handleChange} value={this.state.amount}></input>\n          <button> Save </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    expense: state.expenseReducer.expense,\n    categories: state.categoryReducer.categories\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addExpense: expense => addExpense(expense, dispatch),\n    editExpense: expense => editExpense(expense, dispatch),\n    getExpenses: expense => getExpenses(dispatch),\n    getCategories: () => getCategories(dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseEdit)\n"]},"metadata":{},"sourceType":"module"}