{"ast":null,"code":"import _classCallCheck from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/src/components/home/DoughnutChart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Doughnut } from 'react-chartjs-2';\n\nvar DoughnutChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DoughnutChart, _Component);\n\n  function DoughnutChart() {\n    _classCallCheck(this, DoughnutChart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DoughnutChart).apply(this, arguments));\n  }\n\n  _createClass(DoughnutChart, [{\n    key: \"render\",\n    // get all expenses for a specific budget through categories\n    // go through budgets where it matches the budget.id === category.budget_id === array\n    // with that new array go through where it matches category.id === expense.category_id === array\n    // mapThroughBudgetsToMatchCategory = () => {\n    //     this.props.budgets.map((budget) => {\n    //     let cats = this.props.categories.filter((category) => {\n    //       return category.budget_id === budget.id\n    //     })\n    //     console.log(cats);\n    //\n    //     cats.map((cat) => {\n    //       let expense = this.props.expenses.filter((exp) => {\n    //         console.log(exp);\n    //         return exp.category_id === cat.id\n    //       })\n    //     })\n    //   })\n    // }\n    value: function render() {\n      var _this = this;\n\n      var data = {\n        labels: ['Pink', 'Blue', 'Yellow'],\n        datasets: [{\n          data: [700, 50, 100],\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n          hoverBackgroundColor: [// '#FF6384',\n          // '#36A2EB',\n          '#FFFFFF']\n        }] // {this.mapThroughBudgetsToMatchCategory()}\n\n      };\n\n      if (this.props.budgets.length > 0) {}\n\n      this.props.budgets(function (budget) {\n        var cats = _this.props.categories.filter(function (category) {\n          return category.budget_id === budget.id;\n        }); // console.log(cats);\n\n\n        data.labels = cats.map(function (cat) {\n          return cat.title;\n        });\n        data.datasets.backgroundColor = cats.map(function (cat) {\n          return cat.color;\n        });\n        data.datasets.data = cats.map(function (cat) {\n          var expenses = _this.props.expenses.filter(function (e) {\n            return e.category_id === cat.id;\n          });\n\n          return expenses.reduce(function (acc, val) {\n            return acc + val;\n          });\n        });\n        var arr = [];\n\n        for (var i = 0; i < cats.length; i++) {\n          arr.push('#FFFFFF');\n        }\n\n        data.datasets.hoverBackgroundColor = arr; // cats.map((cat) => {\n        //   let expense = this.props.expenses.filter((exp) => {\n        //     // console.log(exp);\n        //     return exp.category_id === cat.id\n        //   })\n        //\n        // })\n      }); // console.log(mapThroughBudgetsToMatchCategory);\n\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Doughnut, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DoughnutChart;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    budgets: state.budgetReducer.budgets,\n    categories: state.categoryReducer.categories,\n    expenses: state.expenseReducer.expenses\n  };\n};\n\nexport default connect(mapStateToProps)(DoughnutChart);","map":{"version":3,"sources":["/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/src/components/home/DoughnutChart.js"],"names":["React","Component","connect","Doughnut","DoughnutChart","data","labels","datasets","backgroundColor","hoverBackgroundColor","props","budgets","length","budget","cats","categories","filter","category","budget_id","id","map","cat","title","color","expenses","e","category_id","reduce","acc","val","arr","i","push","console","log","mapStateToProps","state","budgetReducer","categoryReducer","expenseReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Doughnut } from 'react-chartjs-2'\n\nclass DoughnutChart extends Component {\n  // get all expenses for a specific budget through categories\n\n  // go through budgets where it matches the budget.id === category.budget_id === array\n  // with that new array go through where it matches category.id === expense.category_id === array\n\n  // mapThroughBudgetsToMatchCategory = () => {\n  //     this.props.budgets.map((budget) => {\n  //     let cats = this.props.categories.filter((category) => {\n  //       return category.budget_id === budget.id\n  //     })\n  //     console.log(cats);\n  //\n  //     cats.map((cat) => {\n  //       let expense = this.props.expenses.filter((exp) => {\n  //         console.log(exp);\n  //         return exp.category_id === cat.id\n  //       })\n  //     })\n  //   })\n  // }\n\n  render() {\n    let data = {\n      labels: ['Pink', 'Blue', 'Yellow'],\n      datasets: [{\n        data: [700, 50, 100],\n        backgroundColor: [\n          '#FF6384',\n          '#36A2EB',\n          '#FFCE56'\n        ],\n        hoverBackgroundColor: [\n          // '#FF6384',\n          // '#36A2EB',\n          '#FFFFFF'\n        ]\n      }]\n    }\n\n    // {this.mapThroughBudgetsToMatchCategory()}\n    if (this.props.budgets.length >0) {\n\n    }\n    this.props.budgets((budget) => {\n      let cats = this.props.categories.filter((category) => {\n        return category.budget_id === budget.id\n      })\n      // console.log(cats);\n      data.labels = cats.map(cat => cat.title)\n      data.datasets.backgroundColor = cats.map(cat => cat.color)\n      data.datasets.data = cats.map(cat => {\n        let expenses = this.props.expenses.filter(e => e.category_id === cat.id)\n        return expenses.reduce((acc, val) => acc + val)\n      })\n      let arr = []\n      for (let i=0; i < cats.length; i++) {\n        arr.push('#FFFFFF')\n      }\n      data.datasets.hoverBackgroundColor = arr\n      // cats.map((cat) => {\n      //   let expense = this.props.expenses.filter((exp) => {\n      //     // console.log(exp);\n      //     return exp.category_id === cat.id\n      //   })\n      //\n      // })\n    })\n\n    // console.log(mapThroughBudgetsToMatchCategory);\n    console.log(this.props);\n    return (\n      <div>\n        <Doughnut data={data} />\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    budgets: state.budgetReducer.budgets,\n    categories: state.categoryReducer.categories,\n    expenses: state.expenseReducer.expenses\n  }\n}\n\nexport default connect(mapStateToProps)(DoughnutChart)\n"]},"metadata":{},"sourceType":"module"}