{"ast":null,"code":"import _objectSpread from \"/Users/sinnam/Desktop/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/sinnam/Desktop/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { GET_EXPENSES, ADD_EXPENSE, EDIT_EXPENSE, DELETE_EXPENSE } from \"../constants/action-type\";\nvar initialState = {\n  expenses: []\n};\n\nvar expenseReducer = function expenseReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var expenses;\n  var expense;\n\n  switch (action.type) {\n    case GET_EXPENSES:\n      expenses = _toConsumableArray(action.payload);\n      return _objectSpread({}, state, {\n        expenses: expenses\n      });\n\n    case ADD_EXPENSE:\n      expenses = _toConsumableArray(state.expenses).concat([action.payload]);\n      return _objectSpread({}, state, {\n        expenses: expenses\n      });\n\n    case EDIT_EXPENSE:\n      expense = action.payload;\n      return _objectSpread({}, state, {\n        expense: expense\n      });\n\n    case DELETE_EXPENSE:\n      expense = _toConsumableArray(state.expense).filter(function (expense) {\n        if (expense.id !== action.payload.id) {\n          return expense;\n        }\n      });\n      return _objectSpread({}, state, {\n        expense: expense\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default expenseReducer;","map":{"version":3,"sources":["/Users/sinnam/Desktop/budgeit_frontend/budgeit/src/reducers/expenseReducer.js"],"names":["GET_EXPENSES","ADD_EXPENSE","EDIT_EXPENSE","DELETE_EXPENSE","initialState","expenses","expenseReducer","state","action","expense","type","payload","filter","id"],"mappings":";;AAAA,SAASA,YAAT,EAAuBC,WAAvB,EAAoCC,YAApC,EAAkDC,cAAlD,QAAwE,0BAAxE;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;AACvD,MAAIH,QAAJ;AACA,MAAII,OAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AAEE,SAAKV,YAAL;AACEK,MAAAA,QAAQ,sBAAOG,MAAM,CAACG,OAAd,CAAR;AACA,+BAAYJ,KAAZ;AAAmBF,QAAAA,QAAQ,EAARA;AAAnB;;AAEF,SAAKJ,WAAL;AACEI,MAAAA,QAAQ,sBAAOE,KAAK,CAACF,QAAb,UAAuBG,MAAM,CAACG,OAA9B,EAAR;AACA,+BAAYJ,KAAZ;AAAmBF,QAAAA,QAAQ,EAARA;AAAnB;;AAEF,SAAKH,YAAL;AACEO,MAAAA,OAAO,GAAGD,MAAM,CAACG,OAAjB;AACA,+BAAYJ,KAAZ;AAAmBE,QAAAA,OAAO,EAAPA;AAAnB;;AAEF,SAAKN,cAAL;AACAM,MAAAA,OAAO,GAAG,mBAAIF,KAAK,CAACE,OAAV,EAAmBG,MAAnB,CAA0B,UAAAH,OAAO,EAAI;AAC7C,YAAIA,OAAO,CAACI,EAAR,KAAeL,MAAM,CAACG,OAAP,CAAeE,EAAlC,EAAuC;AACrC,iBAAOJ,OAAP;AACD;AACF,OAJS,CAAV;AAKA,+BAAYF,KAAZ;AAAmBE,QAAAA,OAAO,EAAPA;AAAnB;;AAEF;AACE,aAAOF,KAAP;AAvBF;AAyBD,CA5BD;;AA6BA,eAAeD,cAAf","sourcesContent":["import { GET_EXPENSES, ADD_EXPENSE, EDIT_EXPENSE, DELETE_EXPENSE } from \"../constants/action-type\";\n\nconst initialState = {\n  expenses: []\n};\n\nconst expenseReducer = (state = initialState, action) => {\n  let expenses\n  let expense\n  switch (action.type) {\n\n    case GET_EXPENSES:\n      expenses = [...action.payload]\n      return { ...state, expenses }\n\n    case ADD_EXPENSE:\n      expenses = [...state.expenses, action.payload]\n      return { ...state, expenses }\n\n    case EDIT_EXPENSE:\n      expense = action.payload\n      return { ...state, expense }\n\n    case DELETE_EXPENSE:\n    expense = [...state.expense].filter(expense => {\n      if (expense.id !== action.payload.id ) {\n        return expense\n      }\n    })\n    return { ...state, expense }\n    \n  default:\n    return state;\n  }\n}\nexport default expenseReducer;\n"]},"metadata":{},"sourceType":"module"}