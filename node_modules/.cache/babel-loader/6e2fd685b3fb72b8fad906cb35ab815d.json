{"ast":null,"code":"import _toConsumableArray from \"/Users/sinnam/Desktop/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/sinnam/Desktop/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_BUDGETS, GET_BUDGET, ADD_BUDGET, EDIT_BUDGET, DELETE_BUDGET } from \"../constants/action-type\";\nvar initialState = {\n  budgets: [],\n  user_id: ''\n};\n\nvar budgetReducer = function budgetReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var budgets;\n\n  switch (action.type) {\n    case GET_BUDGETS:\n      budgets = action.payload;\n      return _objectSpread({}, state, {\n        budgets: budgets\n      });\n\n    case GET_BUDGET:\n      budgets = _toConsumableArray(state.budgets).concat([action.payload]);\n      return _objectSpread({}, state, {\n        budgets: budgets\n      });\n\n    case ADD_BUDGET:\n      budgets = _toConsumableArray(state.budgets).concat([action.payload]);\n      return _objectSpread({}, state, {\n        budgets: budgets\n      });\n\n    case EDIT_BUDGET:\n      budgets = _toConsumableArray(state.budgets).map(function (budget) {\n        if (budget.id === action.payload.id) {\n          return action.payload;\n        } else {\n          return budget;\n        }\n      });\n      return _objectSpread({}, state, {\n        budgets: budgets\n      });\n\n    case DELETE_BUDGET:\n      budgets = _toConsumableArray(state.budgets).filter(function (budget) {\n        if (budget.id !== action.payload.id) {\n          return budget;\n        }\n      });\n      return _objectSpread({}, state, {\n        budgets: budgets\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default budgetReducer;","map":{"version":3,"sources":["/Users/sinnam/Desktop/budgeit_frontend/budgeit/src/reducers/budgetReducer.js"],"names":["GET_BUDGETS","GET_BUDGET","ADD_BUDGET","EDIT_BUDGET","DELETE_BUDGET","initialState","budgets","user_id","budgetReducer","state","action","type","payload","map","budget","id","filter"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,UAAtB,EAAkCC,UAAlC,EAA8CC,WAA9C,EAA2DC,aAA3D,QAAgF,0BAAhF;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;;AAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;AACtD,MAAIJ,OAAJ;;AACA,UAAQI,MAAM,CAACC,IAAf;AACE,SAAKX,WAAL;AACEM,MAAAA,OAAO,GAAGI,MAAM,CAACE,OAAjB;AACA,+BAAYH,KAAZ;AAAmBH,QAAAA,OAAO,EAAPA;AAAnB;;AACF,SAAKL,UAAL;AACAK,MAAAA,OAAO,sBAAOG,KAAK,CAACH,OAAb,UAAsBI,MAAM,CAACE,OAA7B,EAAP;AACE,+BAAYH,KAAZ;AAAmBH,QAAAA,OAAO,EAAPA;AAAnB;;AACF,SAAKJ,UAAL;AACEI,MAAAA,OAAO,sBAAOG,KAAK,CAACH,OAAb,UAAsBI,MAAM,CAACE,OAA7B,EAAP;AACA,+BAAYH,KAAZ;AAAmBH,QAAAA,OAAO,EAAPA;AAAnB;;AACF,SAAKH,WAAL;AACEG,MAAAA,OAAO,GAAG,mBAAIG,KAAK,CAACH,OAAV,EAAmBO,GAAnB,CAAuB,UAAAC,MAAM,EAAI;AACzC,YAAIA,MAAM,CAACC,EAAP,KAAcL,MAAM,CAACE,OAAP,CAAeG,EAAjC,EAAsC;AACpC,iBAAOL,MAAM,CAACE,OAAd;AACD,SAFD,MAEO;AACL,iBAAOE,MAAP;AACD;AACF,OANS,CAAV;AAOA,+BAAYL,KAAZ;AAAmBH,QAAAA,OAAO,EAAPA;AAAnB;;AACF,SAAKF,aAAL;AACEE,MAAAA,OAAO,GAAG,mBAAIG,KAAK,CAACH,OAAV,EAAmBU,MAAnB,CAA0B,UAAAF,MAAM,EAAI;AAC5C,YAAIA,MAAM,CAACC,EAAP,KAAcL,MAAM,CAACE,OAAP,CAAeG,EAAjC,EAAsC;AACpC,iBAAOD,MAAP;AACD;AACF,OAJS,CAAV;AAKA,+BAAYL,KAAZ;AAAmBH,QAAAA,OAAO,EAAPA;AAAnB;;AACF;AACE,aAAOG,KAAP;AA3BJ;AA6BD,CA/BD;;AAgCA,eAAeD,aAAf","sourcesContent":["import { GET_BUDGETS, GET_BUDGET, ADD_BUDGET, EDIT_BUDGET, DELETE_BUDGET } from \"../constants/action-type\";\n\nconst initialState = {\n  budgets: [],\n  user_id: ''\n};\n\nconst budgetReducer = (state = initialState, action) => {\n  let budgets\n  switch (action.type) {\n    case GET_BUDGETS:\n      budgets = action.payload\n      return { ...state, budgets }\n    case GET_BUDGET:\n    budgets = [...state.budgets, action.payload]\n      return { ...state, budgets }\n    case ADD_BUDGET:\n      budgets = [...state.budgets, action.payload]\n      return { ...state, budgets }\n    case EDIT_BUDGET:\n      budgets = [...state.budgets].map(budget => {\n        if (budget.id === action.payload.id ) {\n          return action.payload\n        } else {\n          return budget\n        }\n      })\n      return { ...state, budgets }\n    case DELETE_BUDGET:\n      budgets = [...state.budgets].filter(budget => {\n        if (budget.id !== action.payload.id ) {\n          return budget\n        }\n      })\n      return { ...state, budgets }\n    default:\n      return state;\n  }\n}\nexport default budgetReducer;\n"]},"metadata":{},"sourceType":"module"}