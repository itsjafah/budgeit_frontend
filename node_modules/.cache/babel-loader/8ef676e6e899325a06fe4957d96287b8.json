{"ast":null,"code":"import _classCallCheck from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/src/components/home/DoughnutChart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Doughnut } from 'react-chartjs-2';\n\nvar DoughnutChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DoughnutChart, _Component);\n\n  function DoughnutChart() {\n    _classCallCheck(this, DoughnutChart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DoughnutChart).apply(this, arguments));\n  }\n\n  _createClass(DoughnutChart, [{\n    key: \"render\",\n    // get all expenses for a specific budget through categories\n    // go through budgets where it matches the budget.id === category.budget_id === array\n    // with that new array go through where it matches category.id === expense.category_id === array\n    // mapThroughBudgetsToMatchCategory = () => {\n    //     this.props.budgets.map((budget) => {\n    //     let cats = this.props.categories.filter((category) => {\n    //       return category.budget_id === budget.id\n    //     })\n    //     console.log(cats);\n    //\n    //     cats.map((cat) => {\n    //       let expense = this.props.expenses.filter((exp) => {\n    //         console.log(exp);\n    //         return exp.category_id === cat.id\n    //       })\n    //     })\n    //   })\n    // }\n    value: function render() {\n      var _this = this;\n\n      var data = {\n        labels: ['Pink', 'Blue', 'Yellow'],\n        datasets: [{\n          data: [700, 50, 100],\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n          hoverBackgroundColor: [// '#FF6384',\n          // '#36A2EB',\n          '#FFFFFF']\n        }] // {this.mapThroughBudgetsToMatchCategory()}\n\n      };\n\n      if (this.props.budgets.length > 0) {\n        this.props.budgets.forEach(function (budget) {\n          var cats = _this.props.categories.filter(function (category) {\n            return category.budget_id === budget.id;\n          });\n\n          console.log(cats);\n          data.labels = cats.map(function (cat) {\n            return cat.title;\n          });\n          data.datasets.backgroundColor = cats.map(function (cat) {\n            return cat.color;\n          });\n          data.datasets.data = cats.map(function (cat) {\n            var expenses = _this.props.expenses.filter(function (e) {\n              return e.category_id === cat.id;\n            });\n\n            return expenses.length ? expenses.reduce(function (acc, val) {\n              return acc + val;\n            }) : 0;\n          });\n          var arr = [];\n\n          for (var i = 0; i < cats.length; i++) {\n            arr.push('#FFFFFF');\n          }\n\n          data.datasets.hoverBackgroundColor = arr; // cats.map((cat) => {\n          //   let expense = this.props.expenses.filter((exp) => {\n          //     // console.log(exp);\n          //     return exp.category_id === cat.id\n          //   })\n          //\n          // })\n        });\n      } // console.log(mapThroughBudgetsToMatchCategory);\n\n\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Doughnut, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DoughnutChart;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    budgets: state.budgetReducer.budgets,\n    categories: state.categoryReducer.categories,\n    expenses: state.expenseReducer.expenses\n  };\n};\n\nexport default connect(mapStateToProps)(DoughnutChart);","map":{"version":3,"sources":["/Users/sinnam/Desktop/mod5_project/budgeit_frontend/budgeit/src/components/home/DoughnutChart.js"],"names":["React","Component","connect","Doughnut","DoughnutChart","data","labels","datasets","backgroundColor","hoverBackgroundColor","props","budgets","length","forEach","budget","cats","categories","filter","category","budget_id","id","console","log","map","cat","title","color","expenses","e","category_id","reduce","acc","val","arr","i","push","mapStateToProps","state","budgetReducer","categoryReducer","expenseReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Doughnut } from 'react-chartjs-2'\n\nclass DoughnutChart extends Component {\n  // get all expenses for a specific budget through categories\n\n  // go through budgets where it matches the budget.id === category.budget_id === array\n  // with that new array go through where it matches category.id === expense.category_id === array\n\n  // mapThroughBudgetsToMatchCategory = () => {\n  //     this.props.budgets.map((budget) => {\n  //     let cats = this.props.categories.filter((category) => {\n  //       return category.budget_id === budget.id\n  //     })\n  //     console.log(cats);\n  //\n  //     cats.map((cat) => {\n  //       let expense = this.props.expenses.filter((exp) => {\n  //         console.log(exp);\n  //         return exp.category_id === cat.id\n  //       })\n  //     })\n  //   })\n  // }\n\n  render() {\n    let data = {\n      labels: ['Pink', 'Blue', 'Yellow'],\n      datasets: [{\n        data: [700, 50, 100],\n        backgroundColor: [\n          '#FF6384',\n          '#36A2EB',\n          '#FFCE56'\n        ],\n        hoverBackgroundColor: [\n          // '#FF6384',\n          // '#36A2EB',\n          '#FFFFFF'\n        ]\n      }]\n    }\n\n    // {this.mapThroughBudgetsToMatchCategory()}\n    if (this.props.budgets.length >0) {\n      this.props.budgets.forEach((budget) => {\n        let cats = this.props.categories.filter((category) => {\n          return category.budget_id === budget.id\n        })\n        console.log(cats);\n        data.labels = cats.map(cat => cat.title)\n        data.datasets.backgroundColor = cats.map(cat => cat.color)\n        data.datasets.data = cats.map(cat => {\n          let expenses = this.props.expenses.filter(e => e.category_id === cat.id)\n          return expenses.length ? expenses.reduce((acc, val) => (acc + val)) : 0\n        })\n        let arr = []\n        for (let i=0; i < cats.length; i++) {\n          arr.push('#FFFFFF')\n        }\n        data.datasets.hoverBackgroundColor = arr\n        // cats.map((cat) => {\n        //   let expense = this.props.expenses.filter((exp) => {\n        //     // console.log(exp);\n        //     return exp.category_id === cat.id\n        //   })\n        //\n        // })\n      })\n    }\n\n    // console.log(mapThroughBudgetsToMatchCategory);\n    console.log(this.props);\n    return (\n      <div>\n        <Doughnut data={data} />\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    budgets: state.budgetReducer.budgets,\n    categories: state.categoryReducer.categories,\n    expenses: state.expenseReducer.expenses\n  }\n}\n\nexport default connect(mapStateToProps)(DoughnutChart)\n"]},"metadata":{},"sourceType":"module"}